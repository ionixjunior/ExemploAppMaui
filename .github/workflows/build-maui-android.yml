name: build-maui-android

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
  
env:
  DIR_MOBILEAPP: './ExemploAppMaui'
  DIR_AAB_FILE: 'bin/Release/net9.0-android'
  ARTIFACT_AAB_FILE: 'net.canal.exemploappmaui.aab'

jobs:
  scan-code:
    name: Scan Code
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: ./global.json

      - name: MegaLinter
        uses: oxsecurity/megalinter@v7
        env:
          MEGALINTER_FLAVOR: dotnet
          VALIDATE_ALL_CODEBASE: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-android:
    runs-on: macos-latest
    needs: scan-code

    steps:
      - uses: actions/checkout@v4

      - name: Exibir a versao atual do macOS
        run: sw_vers -productVersion
      
      - name: Configurar uso do Java 17
        uses: actions/setup-java@v4.3.0
        with:
          java-version: 17
          distribution: adopt
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      
      - name: Instalar workaload MAUI
        run: dotnet workload install maui
      
      - name: Restaurar pacotes
        run: dotnet restore *.sln

      - name: Compilar Android
        run: dotnet build -c Release -f net9.0-android

      - name: Listar AAB gerado
        run: |
          cd ${{ env.DIR_MOBILEAPP }}
          cd ${{ env.DIR_AAB_FILE }}
          echo 'Diret√≥rio com o resultado do build:'
          pwd
          echo ''
          echo 'Arquivos gerados:'
          ls
            
      - name: Publicar AAB como Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_AAB_FILE }}
          path: ${{ env.DIR_MOBILEAPP }}/${{ env.DIR_AAB_FILE }}/${{ env.ARTIFACT_AAB_FILE }}
